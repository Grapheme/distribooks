<?php if(!defined('BASEPATH')) exit('No direct script access allowed');

class Admin_ajax_interface extends MY_Controller{
	
	var $json_request = array('status'=>FALSE,'responseText'=>'','redirect'=>FALSE);
	
	function __construct(){
		
		parent::__construct();
		if(!$this->input->is_ajax_request() || $this->account['group'] != ADMIN_GROUP_VALUE):
			show_404();
		endif;
	}
	/********************************************** news ********************************************************/
	public function insertNews(){
		
		if($this->postDataValidation('news') === TRUE):
			if($newsID = $this->insertingNews($this->input->post())):
				$validImage = $this->validationUploadImage(array('min_width'=>200,'max_size'=>1000000));
				if($validImage['status'] == TRUE):
					$this->imageManupulation($_FILES['file']['tmp_name'],'height',TRUE,210,298);
					$photoPath = getcwd().'/download/news';
					$photoUpload = $this->uploadSingleImage($photoPath);
					if($photoUpload['status'] == TRUE):
						$this->load->model('news');
						$this->news->updateField($newsID,'image','download/news/'.$photoUpload['uploadData']['file_name']);
						$this->imageManupulation($_FILES['file']['tmp_name'],'height',TRUE,105,149);
						$thumbnailUpload = $this->uploadSingleImage($photoPath);
						if($thumbnailUpload['status'] == TRUE):
							$this->news->updateField($newsID,'thumbnail','download/news/'.$thumbnailUpload['uploadData']['file_name']);
							$this->json_request['status'] = TRUE;
							$this->json_request['responseText'] = 'Новость добавлена';
							$this->json_request['redirect'] = site_url(ADMIN_START_PAGE.'/news');
						endif;
					endif;
				else:
					$this->json_request['responseText'] = $validImage['response'];
				endif;
			endif;
		else:
			$this->json_request['responseText'] = $this->load->view('html/validation-errors',array('alert_header'=>FALSE),TRUE);
		endif;
		echo json_encode($this->json_request);
	}
	
	public function updateNews(){
		
		if($this->postDataValidation('news') === TRUE):
			if($this->updatingNews($this->input->post())):
				
				if($this->input->post('delete_image') !== FALSE):
					$this->remoteReviewLogo($this->input->get('id'));
				else:
					if(isset($_FILES['file']['tmp_name'])):
						$this->load->model('reviews');
						$oldImage = $this->reviews->value($this->input->get('id'),'logo');
						$this->filedelete(getcwd().'/'.$oldImage);
						$json_request['responsePhotoSrc'] = base_url($this->uploadReviewsLogo($this->input->get('id')));
					endif;
				endif;
				$json_request['status'] = TRUE;
				$json_request['responseText'] = 'Отзыв cохранен';
				$json_request['redirect'] = site_url(ADMIN_START_PAGE.'/reviews');
			endif;
				
			
				$validImage = $this->validationUploadImage(array('min_width'=>200,'max_size'=>1000000));
				if($validImage['status'] == TRUE):
					
				
					$this->imageManupulation($_FILES['file']['tmp_name'],'height',TRUE,210,298);
					$photoPath = getcwd().'/download/news';
					$photoUpload = $this->uploadSingleImage($photoPath);
					if($photoUpload['status'] == TRUE):
						$this->load->model('news');
						$this->news->updateField($newsID,'image','download/news/'.$photoUpload['uploadData']['file_name']);
						$this->imageManupulation($_FILES['file']['tmp_name'],'height',TRUE,105,149);
						$thumbnailUpload = $this->uploadSingleImage($photoPath);
						if($thumbnailUpload['status'] == TRUE):
							$this->news->updateField($newsID,'thumbnail','download/news/'.$thumbnailUpload['uploadData']['file_name']);
							$this->json_request['status'] = TRUE;
							$this->json_request['responseText'] = 'Новость добавлена';
							$this->json_request['redirect'] = site_url(ADMIN_START_PAGE.'/news');
						endif;
					endif;
				else:
					$this->json_request['responseText'] = $validImage['response'];
				endif;
			endif;
		else:
			$this->json_request['responseText'] = $this->load->view('html/validation-errors',array('alert_header'=>FALSE),TRUE);
		endif;
		echo json_encode($this->json_request);
	}
	
	private function insertingNews($post){
		
		$newsData = array(
			'ru_title'=>$post['ru_title'],'en_title'=>$post['en_title'],'ru_small_anonce'=>$post['ru_small_anonce'],'en_small_anonce'=>$post['en_small_anonce'],
			'ru_anonce'=>$post['ru_anonce'],'en_anonce'=>$post['en_anonce'],'ru_text'=>$post['ru_text'],'en_text'=>$post['en_text'],
			'date'=>preg_replace("/(\d+)\.(\w+)\.(\d+)/i","\$3-\$2-\$1",$post['date'])
		);
		$this->load->model('news');
		$newsData['sort'] = $this->news->getNextSortable();
		if($newsID = $this->insertItem(array('insert'=>$newsData,'model'=>'news'))):
			$newsMeta = array(
				'ru_page_title'=>$post['ru_page_title'],'ru_page_description'=>$post['ru_page_description'],'ru_page_h1'=>$post['ru_page_h1'],
				'en_page_title'=>$post['en_page_title'],'en_page_description'=>$post['en_page_description'],'en_page_h1'=>$post['en_page_h1'],
				'group'=>'news','item_id'=>$newsID,'page_address'=>$post['page_address']
			);
			if(empty($newsMeta['page_address'])):
				$newsMeta['page_address'] = $this->translite($post['ru_title']);
			endif;
			$newsID = $this->insertItem(array('insert'=>$newsMeta,'model'=>'meta_titles'));
			return $newsID;
		endif;
		return FALSE;
	}

	private function updatingNews($post){
		
		$newsData = array(
			'id'=>$post['news_id'],
			'ru_title'=>$post['ru_title'],'en_title'=>$post['en_title'],'ru_small_anonce'=>$post['ru_small_anonce'],'en_small_anonce'=>$post['en_small_anonce'],
			'ru_anonce'=>$post['ru_anonce'],'en_anonce'=>$post['en_anonce'],'ru_text'=>$post['ru_text'],'en_text'=>$post['en_text'],
			'date'=>preg_replace("/(\d+)\.(\w+)\.(\d+)/i","\$3-\$2-\$1",$post['date']),'sort'=>$post['sort']
		);
		$this->updateItem(array('update'=>$newsData,'model'=>'news'));
		$newsMeta = array(
			'id'=>$post['meta_titles_id'],
			'ru_page_title'=>$post['ru_page_title'],'ru_page_description'=>$post['ru_page_description'],'ru_page_h1'=>$post['ru_page_h1'],
			'en_page_title'=>$post['en_page_title'],'en_page_description'=>$post['en_page_description'],'en_page_h1'=>$post['en_page_h1'],
			'group'=>'news','item_id'=>$newsID,'page_address'=>$post['page_address']
		);
		if(empty($newsMeta['page_address'])):
			$newsMeta['page_address'] = $this->translite($post['ru_title']);
		endif;
		$newsID = $this->updateItem(array('update'=>$newsMeta,'model'=>'meta_titles'));
		return TRUE;
	}

	private function remoteNewsImage($newsID){
		
		$this->load->model('news');
		$filePath = getcwd().'/'.$this->news->value($reviewID,'logo');
		if(file_exists($filePath)):
			$this->filedelete($filePath);
			$this->reviews->updateField($reviewID,'logo','');
			return TRUE;
		endif;
		return FALSE;
	}
	
}